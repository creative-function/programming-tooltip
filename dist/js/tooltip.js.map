{"version":3,"sources":["tooltip.js"],"names":["console","log","Tooltip","selector","text","overrideOptions","defaultOptions","backgroundColor","getBackgroundColor","color","tooltipSpeed","combinedOptions","Object","assign","options","type","getBG","makeItPink","googleOverrideOptions","fontSize","twitterOverrideOptions","googleTooltip","twitterTooltip"],"mappings":";;AAAA;;;;;;AAGAA,OAAO,CAACC,GAAR,CAAY,WAAZ,E,CAIA;AAEA;;IAEMC,O,GAEL;AACA;AACA;AACA;AACA;AACA;AAEA,iBAAYC,QAAZ,EAAsBC,IAAtB,EAA4BC,eAA5B,EAA4C;AAAA;;AAE3C,MAAMC,cAAc,GAAG;AACtBC,IAAAA,eAAe,EAAE,QADK;AAEtB;AACAC,IAAAA,kBAAkB,EAAE,8BAAU,CAAE,CAHV;AAGY;AAClCC,IAAAA,KAAK,EAAE,OAJe;AAKtBC,IAAAA,YAAY,EAAE,GALQ,CAQvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAduB,GAAvB;AAiBAV,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B;AAACK,IAAAA,cAAc,EAAdA,cAAD;AAAiBD,IAAAA,eAAe,EAAfA;AAAjB,GAA9B,EAnB2C,CAmBsB;;AACjE,MAAMM,eAAe,GAAIC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,cAAlB,EAAkCD,eAAlC,CAAzB,CApB2C,CAoBkC;;AAC7EL,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B;AAACU,IAAAA,eAAe,EAAfA,eAAD;AAAkBL,IAAAA,cAAc,EAAdA,cAAlB;AAAkCD,IAAAA,eAAe,EAAfA;AAAlC,GAA7B,EArB2C,CAqBsC;;AACjF,OAAKS,OAAL,GAAeH,eAAf,CAtB2C,CAsBZ;;AAE/BX,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKa,OAAL,CAAaP,eAAtC,EAxB2C,CAwBY;;AACvD,MAAG,KAAKO,OAAL,CAAaN,kBAAhB,EAAmC;AAAE;AACpCR,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC;AAACc,MAAAA,IAAI,UAAS,KAAKD,OAAL,CAAaN,kBAAtB,CAAL;AAAgD;AACzEQ,MAAAA,KAAK,EAAE,KAAKF,OAAL,CAAaN;AADK,KAAlC,EADkC,CAEgB;;AAClD,QAAI,OAAO,KAAKM,OAAL,CAAaN,kBAApB,IAA0C,UAA9C,EAAyD;AAAG;AAC3D,WAAKM,OAAL,CAAaP,eAAb,GAA+B,KAAKO,OAAL,CAAaN,kBAAb,EAA/B,CADwD,CACS;AACjE;AACD;AAID,C,EAKF;AAEA;;;AAEA,SAASS,UAAT,GAAqB;AACpB,SAAO,MAAP;AACA;;AAED,IAAMC,qBAAqB,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,MADmB;AAE7BZ,EAAAA,eAAe,EAAE,QAFY;AAG7BG,EAAAA,YAAY,EAAC,IAHgB;AAI7BF,EAAAA,kBAAkB,EAAES,UAJS,CAIE;;AAJF,CAA9B;AAOA,IAAMG,sBAAsB,GAAG;AAC9BD,EAAAA,QAAQ,EAAE,MADoB;AAE9BT,EAAAA,YAAY,EAAC,GAFiB;AAG9BH,EAAAA,eAAe,EAAE;AAHa,CAA/B;AAMA,IAAMc,aAAa,GAAG,IAAInB,OAAJ,CAAY,cAAZ,EACd,mBADc,EAEd;AACAgB,qBAHc,CAAtB,C,CAGgC;;AAEhC,IAAMI,cAAc,GAAG,IAAIpB,OAAJ,CAAY,eAAZ,EACd,oBADc,EAEd;AACAkB,sBAHc,CAAvB","sourcesContent":["import { timingSafeEqual } from \"crypto\";\n\n \nconsole.log(\"connected\");\n\n\n\n//a callback function is placing a function as a paramater(argument) to be called later, not run instantly [ i.e using () ] \n\n// callback function example:\n\nclass Tooltip {\n\n\t//FUNCTIONS I NEED \n\t//functionNamehere = () => {}  // this is how you write a fat arrow function \n\t//createTooltip = (selector, text) => {} // parameters in () and formula in {}\n\t//showTooltip = () => {}  \n\t//hideTooltip\n\t//setupListeners\n\n\tconstructor(selector, text, overrideOptions){\n\n\t\tconst defaultOptions = {\n\t\t\tbackgroundColor: 'yellow',\n\t\t\t//getBackgroundColor: null ... getBackgroundColor is a placeholder that can be passed a optional paramater later\n\t\t\tgetBackgroundColor: function(){}, // i.e a function passed as a parameter, to be run when called, and not instantanouesly [unless told to run using ()]\n\t\t\tcolor: 'black',\n\t\t\ttooltipSpeed: 100,\n\t\t}\n\n\t\t//object.assign takes given paramerters and merges them into new paramaters, going in order. The last parameter will always be \"required options\" as they will be passed last \n\t\t//defatultOptions{ color: red, font: 100, opactiy:0}\n\t\t//OverrideOptions { color: blue, font: 300, opacity:1}\n\t\t//.... additonal parameters (OPTIONAL)\n\t\t//*LAST* requiredOptions {font:200}\n\t\t// combinedOptions = Object.assign({}, defaultOptions, overrideOptions, requriedOptions) \n\t\t// combinedOptions { color: blue, font: 200, opacity:1}  \n\n\n\t\tconsole.log('options before', {defaultOptions, overrideOptions}) // tell me the default options and override options values\n\t\tconst combinedOptions =  Object.assign({}, defaultOptions, overrideOptions); // make a new object with the following paramaters in this order: curly brakets, then put values of defaultoptions inside, then add/overrite to default with overridetOptions\n\t\tconsole.log('options after', {combinedOptions, defaultOptions, overrideOptions}) // tell me the value of the new object and the old ones too \n\t\tthis.options = combinedOptions // .options is a title holder [i.e this.puppy] whenever I refer to this.options [this = this instance aka this Tooltip i.e googleTooolTip], I am talking about the values from combinedOptions\n\n\t\tconsole.log('bg before', this.options.backgroundColor) // tell me the value of backgroundColor right now ['yellow']\n\t\tif(this.options.getBackgroundColor){ // if this variable name contains \"something\".. [function, string, whatever]\n\t\t\tconsole.log('getBackgroundcolor', {type: typeof this.options.getBackgroundColor,  // tell us the value of it  and what type of value it is\n\t\t\t\t\t\t\t\t\t\t\t\tgetBG: this.options.getBackgroundColor}) // getBG is a title that can be set to anything // use getBG: tell me the color\n\t\t\tif (typeof this.options.getBackgroundColor == 'function'){  // if the value type is a function [not a string or intiger, etc]\n\t\t\t\tthis.options.backgroundColor = this.options.getBackgroundColor() //  THIS IS WHERE THE CALLBACK FUNCTION IS CALLED!  run the callback function [getBackhroundColor()] and assign result as new value of parameter [backgroundColor] \n\t\t\t}\n\t\t}\n\n\n\n\t}\n}\n\n\n\n//////////////////////THIS IS FOR THE OTHER PAGE WHERE THE ACUTAL TOOLTIPS ARE CALLED\n\n//the 'DEFAULT OPTIONS' ARE ALREADY SET INSIDE THE TOOLTIP FUNCTION <<see above>>\n\nfunction makeItPink(){\n\treturn 'Pink'\n}\n\nconst googleOverrideOptions = {\n\tfontSize: '20px',\n\tbackgroundColor: 'yellow',\n\ttooltipSpeed:2000,\n\tgetBackgroundColor: makeItPink //do not call makItPink() otherwise funciton will run instantly. Just use name, no ();\n}\n\nconst twitterOverrideOptions = {\n\tfontSize: '50px',\n\ttooltipSpeed:100,\n\tbackgroundColor: 'orange',\n}\n\nconst googleTooltip = new Tooltip('.google-link', \n\t\t\t\t\t\t\t\t'Click here Google',\n\t\t\t\t\t\t\t\t//default options are given in the function\n\t\t\t\t\t\t\t\tgoogleOverrideOptions); // new options stored in a variable \n\nconst twitterTooltip = new Tooltip('.twitter-link', \n\t\t\t\t\t\t\t\t\t'Click here Twitter',\n\t\t\t\t\t\t\t\t\t//default options are given in the function \n\t\t\t\t\t\t\t\t\ttwitterOverrideOptions);"],"file":"tooltip.js"}